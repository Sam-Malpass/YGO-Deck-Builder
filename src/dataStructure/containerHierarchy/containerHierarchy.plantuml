@startuml

title __CONTAINERHIERARCHY's Class Diagram__\n

  package dataStructure {
    package dataStructure.containerHierarchy {
      class Album {
          {static} + serialVersionUID : long
          + Album()
          + Album()
          + clone()
      }
    }
  }
  

  package dataStructure {
    package dataStructure.containerHierarchy {
      abstract class Container {
          {static} + serialVersionUID : long
          - containerName : String
          - cards : ArrayList<Card>
          - maxCapacity : int
          ~ Container()
          ~ Container()
          + getContainerName()
          + getMaxCapacity()
          + getCards()
          + setContainerName()
          + setMaxCapacity()
          + addCard()
          + removeCard()
          + listCardsString()
          + findCard()
          + clone()
      }
    }
  }
  

  package dataStructure {
    package dataStructure.containerHierarchy {
      class Deck {
          {static} + serialVersionUID : long
          - extraDeck : ArrayList<Card>
          + Deck()
          + Deck()
          + getOnlyDeck()
          + getExtraDeck()
          + addExtraDeckCard()
          + removeExtraDeckCard()
          + listExtraDeck()
          + addCard()
          + removeCard()
          + findCard()
          + listCardsString()
          + determineCardStack()
          + clone()
      }
    }
  }
  

  package dataStructure {
    package dataStructure.containerHierarchy {
      class Series {
          {static} + serialVersionUID : long
          + Series()
          + Series()
          + clone()
      }
    }
  }
  

  Album -up-|> Container
  Container -up-|> Serializable
  Container -up-|> Cloneable
  Deck -up-|> Container
  Series -up-|> Container


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
